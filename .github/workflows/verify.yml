name: Verify state

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
      - name: Build with Gradle
        run: ./gradlew --build-cache build
      - name: Test with Gradle
        run: ./gradlew test --info

  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - name: Build Image
        run: docker build . -f docker/Dockerfile -t ghcr.io/rainbowdashlabs/reputation-bot:${{ github.sha }}
      - name: Login to Registry
        if: github.ref_name == 'main' || github.ref_name == 'development' || github.ref_type == 'tag'
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u $ --password-stdin ghcr.io
      - name: Push image
        if: github.ref_name == 'main' || github.ref_name == 'development' || github.ref_type == 'tag'
        run: |
          docker push ghcr.io/rainbowdashlabs/reputation-bot:${{ github.sha }}
      - name: Tag & Push branch image
        if: github.ref_name == 'main' || github.ref_name == 'development' || github.ref_type == 'tag'
        run: |
          docker image tag ghcr.io/rainbowdashlabs/reputation-bot:${{ github.sha }} ghcr.io/rainbowdashlabs/reputation-bot:${{ github.ref_name }}
          docker push ghcr.io/rainbowdashlabs/reputation-bot:${{ github.ref_name }}
      - name: Tag & Push latest image
        if: github.ref_name == 'main'
        run: |
          docker image tag ghcr.io/rainbowdashlabs/reputation-bot:${{ github.sha }} ghcr.io/rainbowdashlabs/reputation-bot:latest
          docker push ghcr.io/rainbowdashlabs/reputation-bot:latest

  enforce-encoding:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Remove allowed us-ascii files before check
        run: rm src/main/resources/locale.properties src/main/resources/locale_en_US.properties # This needs improvement
      - name: Check UTF-8 for resource bundles
        run: |
          find src/main/resources/locale* -type f -exec file --mime {} \; | grep -v charset=utf-8 && NOT_UTF_FOUND=1 || true
          [[ \"$NOT_UTF_FOUND\" == \"1\" ]] && exit 1 || true
